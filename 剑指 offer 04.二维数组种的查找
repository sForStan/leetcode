//在一个 n * m 的二维数组中，每一行都按照从左到右 非递减 的顺序排序，每一列都按照从上到下 非递减 的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。
bool findNumberIn2DArray(int** matrix, int matrixSize, int* matrixColSize, int target){
  if(matrix==NULL||matrixSize==0||matrixColSize==0){//如果传入的数据没有意义，返回假
    return false;
  }
  int i=0,j=*matrixColSize-1;
  while(i<matrixSize&&j>0){
    if(target==matrix[i][j]){//如果定位到目标值，返回真
      return true;
    }
    else if(target>matrix[i][j]){//如果目标值大于当前二维数组所在位置的值，下移
      i++;
    }
    else if(target<matrix[i][j]){//如果目标值小于当前二维数组的值，上移
      j--;
    }
  }
  return false;//如果循环走完没有遇到目标值，说明数组种没有目标值
}
